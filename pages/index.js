import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import axios from "axios";

export default function Home() {
	const { data: session } = useSession()
	const [accessToken, setAccessToken] = useState('')
	const [playlistType, setPlaylistType] = useState('')
	const [genres, setGenres] = useState('')
	const [numSongs, setNumSongs] = useState(0)
	const [result, setResult] = useState([])
	const [title, setTitle] = useState('')
	const [playlistCreated, setPlaylistCreated] = useState(false)

	const handleCreatePlaylist = async (result, accessToken) => {
		try {
			const response = await axios.post('/api/spotify', {
				songs: result,
				playlistName: title,
				userId: session.token.sub, // El ID de usuario de Spotify
				accessToken, // El token de acceso de Spotify
			});

			console.log('Playlist creada:', response.data.playlistId);
			setPlaylistCreated(true)
		} catch (error) {
			console.error('Error creando la playlist:', error);
		}
	};


	async function onSubmit(e) {
		e.preventDefault()
		console.log("submitting")
		try {
			const response = await fetch('/api/generate', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({
					typeOfPlaylist: playlistType,
					genres: genres,
					numSongs: numSongs,
				}),
			})
			if (response.ok) {
				const data = await response.json()
				setResult(data.result)
				setTitle(data.title)
				setAccessToken(session.token.accessToken)

			}
		} catch (error) {
			console.error(error)
		}
	}
	console.log(session?.token)

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Spotify Playlist</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>
				<h1 className={styles.title}>
					Welcome,{' '}
					{session
						? session.token?.name || 'friend'
						: 'stranger'}
					!

				</h1>
				<p>
					{session ? (
						<button
							className={styles.button}
							type="button"
							onClick={() => signOut()}
						>
							Sign out
						</button>
					) : (
						<button
							className={styles.button}
							type="button"
							style={{ '--accent-color': '#15883e' }}
							onClick={() => signIn('spotify')}
							disabled={session}
						>
							Sign in with Spotify
						</button>
					)}
				</p>

				{session && (
					<form onSubmit={onSubmit} className={styles.form}>
						<div className={styles.inputGroup}>
							<label htmlFor="playlistType" className={styles.label}>
								Tipo de Playlist:
							</label>
							<input
								type="text"
								name="playlistType"
								id="playlistType"
								className={styles.input}
								placeholder="Ej: Fiesta, Relajación, etc."
								value={playlistType}
								onChange={(e) => setPlaylistType(e.target.value)}
							/>
						</div>

						<div className={styles.inputGroup}>
							<label htmlFor="genres" className={styles.label}>
								Géneros Musicales:
							</label>
							<input
								type="text"
								name="genres"
								id="genres"
								className={styles.input}
								placeholder="Ej: Rock, Pop, Reggae, etc."
								value={genres}
								onChange={(e) => setGenres(e.target.value)}
							/>
						</div>

						<div className={styles.inputGroup}>
							<label htmlFor="numSongs" className={styles.label}>
								Cantidad de Canciones:
							</label>
							<input
								type="number"
								name="numSongs"
								id="numSongs"
								className={styles.input}
								placeholder="Ej: 50"
								min={1}
								max={20}
								value={numSongs}
								onChange={(e) => setNumSongs(e.target.value)}
							/>
						</div>

						<button type="submit" className={styles.button}>
							Crear Playlist
						</button>
					</form>
				)}
				<div className={styles.result}>
					{result.length > 0 && (
						<>
							<h2>{title}</h2>
							<ul>
								{result.map((song, index) => (
									<li key={index}>
										{index + 1} - {' '}
										{song}
									</li>
								))}
							</ul>
							<button onClick={() => handleCreatePlaylist(result, accessToken)} className={styles.button}>
								Crear Playlist en Spotify
							</button>
							{playlistCreated && <p>Playlist creada con éxito!</p>}
						</>
					)}
				</div>

			</main>
		</div>
	)
}